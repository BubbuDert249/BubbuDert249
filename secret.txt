// src2_api_minimal

(function () {
  const _0x3a4b = [
    'Vector3', 'GameObject', 'MeshRenderer', 'Scene',
    'position', 'rotation', 'scale', 'components',
    'type', 'mesh', 'material', 'name', 'objects',
    'push', 'find', 'createObject', 'renderScene',
    'log', 'warn', 'No\x20scene\x20loaded.', 'Rendering\x20scene:\x20',
    'Mesh=', ',\x20Material=', ',\x20Position=', 'DefaultScene'
  ];

  function _0x1b24(i) {
    return _0x3a4b[i];
  }

  let __engine_objects__ = [], __current_scene__ = null;

  const Engine = {};

  Engine[_0x1b24(0)] = function (_x = 0, _y = 0, _z = 0) {
    this.x = _x;
    this.y = _y;
    this.z = _z;
    this.toString = function () {
      return `(${this.x}, ${this.y}, ${this.z})`;
    };
  };

  Engine[_0x1b24(1)] = function (_n) {
    this[_0x1b24(11)] = _n;
    this[_0x1b24(4)] = new Engine[_0x1b24(0)]();
    this[_0x1b24(5)] = new Engine[_0x1b24(0)]();
    this[_0x1b24(6)] = new Engine[_0x1b24(0)](1, 1, 1);
    this[_0x1b24(7)] = [];
    this.addComponent = function (_c) {
      this[_0x1b24(7)][_0x1b24(13)](_c);
    };
    this.getComponent = function (_t) {
      return this[_0x1b24(7)][_0x1b24(14)](c => c[_0x1b24(8)] === _t);
    };
  };

  Engine[_0x1b24(2)] = function (_m = "Cube", _mat = "Default") {
    this[_0x1b24(8)] = _0x1b24(2);
    this[_0x1b24(9)] = _m;
    this[_0x1b24(10)] = _mat;
  };

  Engine[_0x1b24(3)] = function (_n) {
    this[_0x1b24(11)] = _n;
    this[_0x1b24(12)] = [];
    this.addObject = function (_o) {
      this[_0x1b24(12)][_0x1b24(13)](_o);
    };
    this.findObject = function (_n) {
      return this[_0x1b24(12)][_0x1b24(14)](o => o[_0x1b24(11)] === _n);
    };
    this.load = function () {
      __current_scene__ = this;
    };
    this.unload = function () {
      __current_scene__ = null;
    };
  };

  Engine[_0x1b24(15)] = function (_n) {
    let _o = new Engine[_0x1b24(1)](_n);
    __engine_objects__[_0x1b24(13)](_o);
    if (__current_scene__) __current_scene__[_0x1b24(12)][_0x1b24(13)](_o);
    return _o;
  };

  Engine[_0x1b24(16)] = function () {
    if (!__current_scene__) return console[_0x1b24(17)](_0x1b24(18));
    console[_0x1b24(17)](_0x1b24(19) + __current_scene__[_0x1b24(11)]);
    __current_scene__[_0x1b24(12)].forEach(o => {
      let m = o.getComponent(_0x1b24(2));
      if (m) {
        console[_0x1b24(17)](
          ` - ${o[_0x1b24(11)]}: ${_0x1b24(20)}${m[_0x1b24(9)]}${_0x1b24(21)}${m[_0x1b24(10)]}${_0x1b24(22)}${o[_0x1b24(4)]}`
        );
      }
    });
  };

  const scene = new Engine[_0x1b24(3)](_0x1b24(23));
  scene.load();

  const player = Engine[_0x1b24(15)]("Player");
  player[_0x1b24(4)] = new Engine[_0x1b24(0)](10, 0, 5);
  player.addComponent(new Engine[_0x1b24(2)]("HeroModel", "PlayerMat"));

  const sun = Engine[_0x1b24(15)]("Sun");
  sun[_0x1b24(4)] = new Engine[_0x1b24(0)](100, 200, 300);

  Engine[_0x1b24(16)]();

  if (typeof window !== 'undefined') window.Source2 = Engine;
  else if (typeof global !== 'undefined') global.Source2 = Engine;
})();
